name: Deploy to EC2

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Get EC2 Public IP
        id: get_ip
        run: |
          INSTANCE_ID=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=BookExchangeServerInstance" --query "Reservations[*].Instances[*].InstanceId" --output text)
          PUBLIC_IP=$(aws ec2 describe-instances --instance-ids $INSTANCE_ID --query "Reservations[*].Instances[*].PublicIpAddress" --output text)
          echo "::set-output name=public_ip::$PUBLIC_IP"

      - name: Set up SSH
        run: |
          # Write the private key to a temporary file
          echo "${{ secrets.AWS_SSH_PRIVATE_KEY }}" > /tmp/private_key
          chmod 600 /tmp/private_key

      - name: Deploy to EC2
        run: |
          # SSH into EC2 and execute commands with strict host key checking disabled
          ssh -o StrictHostKeyChecking=no -i /tmp/private_key ec2-user@${{ steps.get_ip.outputs.public_ip }} << 'EOF'
            cd /usr/app
            sudo docker-compose pull
            sudo docker-compose up -d
          EOF
